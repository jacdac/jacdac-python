# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *
from typing import Optional, cast


class MicrophoneClient(Client):
    """
    A single-channel microphone.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_MICROPHONE, JD_MICROPHONE_PACK_FORMATS, role)
    

    @property
    def sampling_period(self) -> Optional[int]:
        """
        Get or set microphone sampling period.
        Sampling rate is `1_000_000 / sampling_period Hz`., _: us
        """
        reg = self.register(JD_MICROPHONE_REG_SAMPLING_PERIOD)
        values = reg.values()
        return cast(Optional[int], values[0] if values else None)

    @sampling_period.setter
    def sampling_period(self, value: int) -> None:
        reg = self.register(JD_MICROPHONE_REG_SAMPLING_PERIOD)
        reg.set_values(value)


    
