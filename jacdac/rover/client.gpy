from jacdac.bus import Bus, Client
from .constants import *
from typing import Union


class RoverClient(Client):
    """
    A roving robot.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_ROVER, JD_ROVER_PACK_FORMATS, role)
    

    @property
    def x(self) -> Union[float, None]:
        """
        The current position and orientation of the robot., cm
        """
        reg = self.register(JD_ROVER_REG_KINEMATICS)
        return reg.value(0)

    @property
    def y(self) -> Union[float, None]:
        """
        The current position and orientation of the robot., cm
        """
        reg = self.register(JD_ROVER_REG_KINEMATICS)
        return reg.value(1)

    @property
    def vx(self) -> Union[float, None]:
        """
        The current position and orientation of the robot., cm/s
        """
        reg = self.register(JD_ROVER_REG_KINEMATICS)
        return reg.value(2)

    @property
    def vy(self) -> Union[float, None]:
        """
        The current position and orientation of the robot., cm/s
        """
        reg = self.register(JD_ROVER_REG_KINEMATICS)
        return reg.value(3)

    @property
    def heading(self) -> Union[float, None]:
        """
        The current position and orientation of the robot., Â°
        """
        reg = self.register(JD_ROVER_REG_KINEMATICS)
        return reg.value(4)

    
