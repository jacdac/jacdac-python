# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *
from typing import Optional, Tuple


class PCMonitorClient(Client):
    """
    Measures PC monitor.
    Implements a client for the `PC monitor <https://microsoft.github.io/jacdac-docs/services/pcmonitor>`_ service.

    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_P_CMONITOR, JD_P_CMONITOR_PACK_FORMATS, role)


    @property
    def cpu_usage(self) -> Optional[int]:
        """
        CPU usage in percent., _: %
        """
        return self.register(JD_P_CMONITOR_REG_CPU_USAGE).value()

    @property
    def cpu_temp(self) -> Optional[int]:
        """
        CPU temperature in Celsius., _: °C
        """
        return self.register(JD_P_CMONITOR_REG_CPU_TEMP).value()

    @property
    def ram_usage(self) -> Optional[int]:
        """
        RAM usage in percent., _: %
        """
        return self.register(JD_P_CMONITOR_REG_RAM_USAGE).value()

    @property
    def gpu_info(self) -> Optional[Tuple[int, int]]:
        """
        GPU info., usage: %,temp: °C
        """
        return self.register(JD_P_CMONITOR_REG_GPU_INFO).value()

    @property
    def net_info(self) -> Optional[Tuple[int, int]]:
        """
        Network transmit/receive speed in Kbytes per second.
        
        A measure of PC monitor., tx: KB,rx: KB
        """
        return self.register(JD_P_CMONITOR_REG_NET_INFO).value()

    
