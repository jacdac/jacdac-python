from jacdac.bus import Bus, Client
from .constants import *
from typing import Union, cast


class BrailleDisplayClient(Client):
    """
    A Braille pattern display module. This module display [unicode braille patterns](https://www.unicode.org/charts/PDF/U2800.pdf), country specific encoding have to be implemented by the clients.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_BRAILLE_DISPLAY, JD_BRAILLE_DISPLAY_PACK_FORMATS, role)
    

    @property
    def enabled(self) -> Union[bool, None]:
        """
        Determins if the braille display is active.
        """
        reg = self.register(JD_BRAILLE_DISPLAY_REG_ENABLED)
        value = reg.value(0)
        return cast(Union[bool, None], value)

    @enabled.setter
    def enabled(self, value: bool) -> None:
        reg = self.register(JD_BRAILLE_DISPLAY_REG_ENABLED)
        reg.set_value(0, value)


    @property
    def patterns(self) -> Union[str, None]:
        """
        Braille patterns to show. Must be unicode characters between `0x2800` and `0x28ff`.
        """
        reg = self.register(JD_BRAILLE_DISPLAY_REG_PATTERNS)
        value = reg.value(0)
        return cast(Union[str, None], value)

    @patterns.setter
    def patterns(self, value: str) -> None:
        self.enabled = True
        reg = self.register(JD_BRAILLE_DISPLAY_REG_PATTERNS)
        reg.set_value(0, value)


    @property
    def length(self) -> Union[int, None]:
        """
        Gets the number of patterns that can be displayed., #
        """
        reg = self.register(JD_BRAILLE_DISPLAY_REG_LENGTH)
        value = reg.value(0)
        return cast(Union[int, None], value)

    
