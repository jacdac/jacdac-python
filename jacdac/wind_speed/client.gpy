from jacdac.bus import Bus, Client
from .constants import *
from typing import Union, cast


class WindSpeedClient(Client):
    """
    A sensor that measures wind speed.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_WIND_SPEED, JD_WIND_SPEED_PACK_FORMATS, role)
    

    @property
    def wind_speed(self) -> Union[float, None]:
        """
        The velocity of the wind., m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_WIND_SPEED)
        value = reg.value(0)
        return cast(Union[float, None], value)

    @property
    def wind_speed_error(self) -> Union[float, None]:
        """
        Error on the reading, m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_WIND_SPEED_ERROR)
        value = reg.value(0)
        return cast(Union[float, None], value)

    @property
    def max_wind_speed(self) -> Union[float, None]:
        """
        (Optional) Maximum speed that can be measured by the sensor., m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_MAX_WIND_SPEED)
        value = reg.value(0)
        return cast(Union[float, None], value)

    
