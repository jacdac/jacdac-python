# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *
from typing import Optional, cast


class WindSpeedClient(Client):
    """
    A sensor that measures wind speed.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_WIND_SPEED, JD_WIND_SPEED_PACK_FORMATS, role)
    

    @property
    def wind_speed(self) -> Optional[float]:
        """
        The velocity of the wind., _: m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_WIND_SPEED)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    @property
    def wind_speed_error(self) -> Optional[float]:
        """
        Error on the reading, _: m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_WIND_SPEED_ERROR)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    @property
    def max_wind_speed(self) -> Optional[float]:
        """
        (Optional) Maximum speed that can be measured by the sensor., _: m/s
        """
        reg = self.register(JD_WIND_SPEED_REG_MAX_WIND_SPEED)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    
