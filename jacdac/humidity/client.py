# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *
from typing import Optional, cast


class HumidityClient(Client):
    """
    A sensor measuring humidity of outside environment.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_HUMIDITY, JD_HUMIDITY_PACK_FORMATS, role)
    

    @property
    def humidity(self) -> Optional[float]:
        """
        The relative humidity in percentage of full water saturation., _: %RH
        """
        reg = self.register(JD_HUMIDITY_REG_HUMIDITY)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    @property
    def humidity_error(self) -> Optional[float]:
        """
        The real humidity is between `humidity - humidity_error` and `humidity + humidity_error`., _: %RH
        """
        reg = self.register(JD_HUMIDITY_REG_HUMIDITY_ERROR)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    @property
    def min_humidity(self) -> Optional[float]:
        """
        Lowest humidity that can be reported., _: %RH
        """
        reg = self.register(JD_HUMIDITY_REG_MIN_HUMIDITY)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    @property
    def max_humidity(self) -> Optional[float]:
        """
        Highest humidity that can be reported., _: %RH
        """
        reg = self.register(JD_HUMIDITY_REG_MAX_HUMIDITY)
        values = reg.values()
        return cast(Optional[float], values[0] if values else None)

    
