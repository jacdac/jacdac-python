# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *



class RosClient(Client):
    """
    A ROS (Robot Operating System https://www.ros.org/) controller that can act as a broker for messages.
    Implements a client for the `ROS <https://microsoft.github.io/jacdac-docs/services/ros>`_ service.

    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_ROS, JD_ROS_PACK_FORMATS, role)



    def publish_message(self, node: str, topic: str, message: str) -> None:
        """
        Publishes a JSON-encoded message to the given topic.
        """
        self.send_cmd_packed(JD_ROS_CMD_PUBLISH_MESSAGE, node, topic, message)

    def subscribe_message(self, node: str, topic: str) -> None:
        """
        Subscribes to a message topic. Subscribed topics will emit message reports.
        """
        self.send_cmd_packed(JD_ROS_CMD_SUBSCRIBE_MESSAGE, node, topic)
    
