# Autogenerated file. Do not edit.
from jacdac.bus import Bus, Client
from .constants import *
from typing import Optional, cast


class DmxClient(Client):
    """
    A service that can send DMX512-A packets with limited size. This service is designed to allow tinkering with a few DMX devices, but only allows 235 channels. More about DMX at https://en.wikipedia.org/wiki/DMX512.
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_DMX, JD_DMX_PACK_FORMATS, role)
    

    @property
    def enabled(self) -> Optional[bool]:
        """
        Determines if the DMX bridge is active
        """
        reg = self.register(JD_DMX_REG_ENABLED)
        value = reg.value(0)
        return cast(Optional[bool], value)

    @enabled.setter
    def enabled(self, value: bool) -> None:
        reg = self.register(JD_DMX_REG_ENABLED)
        reg.set_value(0, value)



    def send(self, channels: bytes) -> None:
        """
        Send a DMX packet, up to 236bytes long, including the start code.
        """
        self.send_cmd_packed(JD_DMX_CMD_SEND, channels)
    
