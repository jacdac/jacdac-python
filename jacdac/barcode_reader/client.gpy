from jacdac.bus import Bus, Client
from .constants import *
from typing import Union
from jacdac.events import HandlerFn

class BarcodeReaderClient(Client):
    """
    A device that reads various barcodes, like QR codes. For the web, see [BarcodeDetector](https://developer.mozilla.org/en-US/docs/Web/API/BarcodeDetector).
    """

    def __init__(self, bus: Bus, role: str) -> None:
        super().__init__(bus, JD_SERVICE_CLASS_BARCODE_READER, JD_BARCODE_READER_PACK_FORMATS, role)
    

    @property
    def enabled(self) -> Union[bool, None]:
        """
        Turns on or off the detection of barcodes.
        """
        reg = self.register(JD_BARCODE_READER_REG_ENABLED)
        return reg.value(0)

    @enabled.setter
    def enabled(self, value: bool) -> None:
        reg = self.register(JD_BARCODE_READER_REG_ENABLED)
        reg.set_value(0, value)


    def on_detect(self, handler: HandlerFn) -> None:
        """
        Raised when a bar code is detected and decoded. If the reader detects multiple codes, it will issue multiple events.
        In case of numeric barcodes, the `data` field should contain the ASCII (which is the same as UTF8 in that case) representation of the number.
        """
        # TODO

    
